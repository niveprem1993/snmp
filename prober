#!/usr/bin/python
import sys
import easysnmp
import time
from easysnmp import Session,snmp_get,snmp_walk

delay = time.time()

conn = sys.argv[1]
connection = conn.split(':')
ip = connection[0]
port = connection[1]
comm = connection[2]
samp_freq = sys.argv[2]
sample_time = 1/float(samp_freq)
samples_input = sys.argv[3]
samples = float(samples_input)
sample = (samples)

if sample >= 1:
    count = sample+1
elif sample == -1:
    count = 1
elif sample == 0:
    count = 0
else:
    print("Incorrect sample value")
    exit()

oid = []
oid[0] = "'1.3.6.1.2.1.1.3.0'"
new_oid = []
old_oid = []
for n in range(4,len(sys.argv)):
    oid.append(sys.argv[n])

def probe_device():
    global old_oid,current_time
    session = Session(hostname=ip,remote_port=port,community='public',version=2,timeout=1,retries=1)
    oids = session.get(oid)
    for i in range(1,len(oids)):
        if oids(i).value!='NOSUCHOBJECT' and oids(i).value!='NOSUCHINSTANCE':
           new_oid.append(int(oids(i).value))  
           if count!=0 and len(old_oid)>0:
		time_1 = int(new_oid(i-1)) - int(old_oid(i-1))
		difference=round(delay-current_time,1)
		interval_rate = int(time_1 / difference)
		if interval_rate < 0 :
			if oids(i).snmp_type == 'COUNTER32': 
			    time_1 = time_1 + 2**32
			    print(str(delay) +"|"+ str(time_1 / difference) +"|")
			elif oids(i).snmp_type == 'COUNTER64':
			    time_1 = time_1 + 2**64
			    print(str(delay) +"|"+ str(time1 / difference) +"|")
		else:
	           print(str(delay) +"|"+ str(interval_rate) +"|")

	old_oid = new_oid
        current_time = delay

num = 1
while 1:
    if sample == -1:
        pass
    elif num <= count:
        pass
    else:
        exit()

    delay1 = time.time()

    sleep_time = sample_time - (delay1 - delay)
    delay = time.time()

    if sleep_time < 0:
        pass
    else:
        time.sleep(sleep_time)

    probe_device()
    num = num+1
