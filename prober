#!/usr/bin/env python
import sys
import subprocess
import time

delay = time.time()

conn = sys.argv[1]
connection = conn.split(':')
ip = connection[0]
port = connection[1]
comm = connection[2]
samp_freq = sys.argv[2]
sample_time = 1/float(samp_freq)
samples_input = sys.argv[3]
samples = float(samples_input)
sample = (samples)
oids = sys.argv[4:]

if sample >= 1:
    count = sample+1
elif sample == -1:
    count = 1
elif sample == 0:
    count = 0
else:
    print("Incorrect sample value")
    exit()

num = 1
while 1:
    command = "snmpget -v 2c -c"+str(comm)+" "+str(ip) + \
        ":"+str(port)+" "+"1.3.6.1.2.1.2.2.1.10.2 [1]"+" "+str(oids)
    if sample == -1:
        pass
    elif num <= count:
        pass
    else:
        exit()

    output = subprocess.check_output(command)
    output_time = output.splitlines()
    up_time1 = output_time[0]
    up_time = up_time1.split(' ')
    time1 = up_time[3]
    time1 = time1.replace('(', '')
    time1 = time1.replace(')', '')
    time_1 = float(time1)

    delay1 = time.time()

    sleep_time = sample_time - (delay1 - delay)
    delay = time.time()

    if sleep_time < 0:
        pass
    else:
        time.sleep(sleep_time)

    rate = []

    i = 1
    if i < len(output_time):
        value = output_time[i].split(' ')
        rate_value = float(value[3])
        rate.append(rate_value)
        i = i+1

    counter = value[2]
    total_time = time_1/100
    if total_time > 0:
        output_console = []
        output_console.append(int(time.time()))
        if counter.find('32') != -1:
            rate1 = int(rate + (2**32))
            rate_cal = int(int(rate1)/total_time)
            output_console.append(rate_cal)
        else:
            rate2 = int(rate + (2**64))
            rate_cal = int(int(rate2)/total_time)
            output_console.append(rate_cal)
    print('|'.join(map(str, output_console)))
    num = num+1
