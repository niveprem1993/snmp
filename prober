#!/usr/bin/python3

#importing module
import math
import easysnmp 
import sys, time 
from easysnmp import Session
from easysnmp import snmp_get, snmp_walk


# agent/device details to probes


device_info = sys.argv[1]
data = device_info.split(':')
ipaddress = data[0]
port = data[1]
comm = data[2]
frequency = float(sys.argv[2]) 
frequencyTime = 1/frequency
NoOfSample = int(sys.argv[3])

OIDs = []
OidFirst = []
OidList = []


for i in range(4, len(sys.argv)):
	OIDs.append(sys.argv[i])
OIDs.insert(0, '1.3.6.1.2.1.1.3.0')

def FunctionSnmp():
	global OidFirst, time_counting
	session=Session(hostname=ipaddress,remote_port=port,community='public',version=2,timeout=1,retries=1)
	responseStore = session.get(OIDs)
	OidList = []
	

	for j in range(1,len(responseStore)):
		if responseStore[j].value!='NOSUCHOBJECT' and responseStore[j].value!='NOSUCHINSTANCE':
			OidList.append(int(responseStore[j].value))

			if count!=0 and len(OidFirst)>0:
				timeRate = int(OidList[j-1]) - int(OidFirst[j-1])
				timeStore = round(past_time - time_counting,1)
				rateObtain = int(timeRate/timeStore)

				if rateObtain < 0:
					if responseStore[j].snmp_type == 'COUNTER32':
						timeRate = timeRate + 2**32
						print(str(past_time) + "|"+ str(timeRate / timeStore) +"|")
					elif responseStore =='COUNTER64':
						timeRate = timeRate+2**64
						print(str(past_time) +"|"+ str(timeRate/timeStore)+"|")
				else:
					print(str(past_time)+"|"+str(rateObtain)+"|")

	OidFirst = OidList
	time_counting = past_time

if NoOfSample == -1:
	count = 0
	OidFirst = []
	while True:
		past_time = (time.time())
		FunctionSnmp()
		responseTime=(time.time())
		count = count +1
		time.sleep(abs(frequencyTime - responseTime + past_time))
else:
	OidFirst = []
	for count in range(0, NoOfSample+1):
		past_time = (time.time())
		FunctionSnmp()
		responseTime = (time.time())
		time.sleep(abs(frequencyTime - responseTime+past_time))					
	

